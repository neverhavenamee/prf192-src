* Write a program in C to check whether a given number is an ugly number or not.(Số xấu)
# include <stdio.h>
# include <string.h>

int main()
{
int n,x=0;
  printf("\n\n Check whether a given number is an ugly number:\n");
  printf("----------------------------------------------------\n");
  printf("Input an integer number: ");
  scanf("%d",&n);

      if (n <= 0) {  
            printf("Input a correct number.");  
        }
       while (n != 1) 
       {  
            if (n % 5 == 0) 
            {  
                n /= 5;  
            } 
            else if (n % 3 == 0) 
            {  
                n /= 3;  
            } 
            else if (n % 2 == 0) 
            {  
                n /= 2;  
            } 
            else 
            {  
                printf("It is not an ugly number.\n"); 
                x = 1;  
                break;  
            }  
        } 
		        if (x==0)
		        { 
                printf("It is an ugly number.\n");
                }
}
---------------------------
* Write a program in C to determine whether a number is Happy or not.( số hạnh phúc)
# include <stdio.h>
# include <math.h>
# include <stdlib.h>
# include <stdbool.h>


int SumOfSquNum(int givno)
{
    int SumOfSqr = 0;
    while (givno)
    {
        SumOfSqr += (givno % 10) * (givno % 10);
        givno /= 10;
    }
    return SumOfSqr;
}
bool checkHappy(int chkhn)
{
    int slno, fstno;
    slno = fstno = chkhn;
    do
    {
        slno = SumOfSquNum(slno);
        fstno = SumOfSquNum(SumOfSquNum(fstno));
    }
    while (slno != fstno);
    return (slno == 1);
}
int main()
{
int hyno;
	printf("\n\n Check whether a number is Happy number or not: \n");
	printf(" ---------------------------------------------------\n");
	printf(" Input a number: ");
	scanf("%d",&hyno);

    if (checkHappy(hyno))
	printf("%d is a Happy number.\n",hyno);
    else
	printf("%d is not a Happy number.\n",hyno);
} 
--------------------------------------------------------------------------------------
* Write a program in C to check whether a given number is an ideal cube or not.(kiểm tra có phải số lập phương ko)
# include <stdio.h>
# include <stdlib.h>
# include <math.h>


int main() 
{ 
int num, curoot,ans; 

 printf("\n\n Check whether a number is a perfect cube or not: \n");
 printf(" -----------------------------------------------------\n");
    printf(" Input a number: ");
    scanf("%d",&num);
curoot=round(pow(num, 1.0/3.0));

if(curoot*curoot*curoot==num)
{
  printf(" The number is a perfect Cube of %d \n",curoot);   
}
else
{
  printf(" The number is not a perfect Cube.\n");   
}
}
----------------------------------------------------
* C Exercises: Check whether a given number is a perfect number or not( số hoàn hảo )
/*Perfect number is a positive number which sum of all positive divisors excluding that number is equal to that number. For example 6 is perfect number since divisor of 6 are 1, 2 and 3.  Sum of its divisor is 1 + 2+ 3 = 6*/
#include <stdio.h>

void  main()
{
  int n,i,sum;
  int mn,mx;

  printf("Input the  number : ");
  scanf("%d",&n);
    sum = 0;
 printf("The positive divisor  : ");
    for (i=1;i<n;i++)
      {
      if(n%i==0)
         {
         sum=sum+i;
         printf("%d  ",i);
         }
       }
printf("\nThe sum of the divisor is : %d",sum);
    if(sum==n)
      printf("\nSo, the number is perfect.");
    else
      printf("\nSo, the number is not perfect.");
printf("\n");
}
---------------------------------------------------------------------
* C Exercises: Check whether a number is a palindrome or not. (số đối xứng)
#include <stdio.h>

void main(){
    int num,r,sum=0,t;

    printf("Input a number: ");
    scanf("%d",&num);

    for(t=num;num!=0;num=num/10){
         r=num % 10;
         sum=sum*10+r;
    }
    if(t==sum)
         printf("%d is a palindrome number.\n",t);
    else
         printf("%d is not a palindrome number.\n",t);

}
-----------------------------------
C Exercises: Print a string in reverse order (in chuỗi thứ tự đảo ngược)
#include <stdio.h>
#include <string.h>
 
void main()
{
   char str1[100], tmp;
   int l, lind, rind,i;

       printf("\n\nPrint a string in reverse order:\n ");
       printf("-------------------------------------\n");

   printf("Input a string to reverse : ");
   scanf("%s", str1);
   l = strlen(str1);

   lind = 0;
   rind = l-1;
    
for(i=lind;i<rind;i++)
       {
       tmp = str1[i];
       str1[i] = str1[rind];
       str1[rind] = tmp;
       rind--;
   }
 
   printf("Reversed string is: %s\n\n", str1);
}
