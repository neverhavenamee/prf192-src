#include<stdio.h>
#include<math.h>
#include<string.h>
#include <stdbool.h>
#include<stdlib.h>
#define MAX 100

void NhapMang(int a[],int n){
	int i;
	for(i=0;i<n;i++){
		printf("Nhap so thu %d: ", i);
		scanf("%d",&a[i]);
	}
}
void XuatMang(int a[],int n){
	int i;
	for(i=0;i<n;i++) {
		printf("%4d",a[i]);
	}
}
void nhapmang2(int a[MAX][MAX], int m, int n){
	int i,j;
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			printf("Nhap phan tu thu %d hang %d: ",j,i);
			scanf("%d",&a[i][j]);
		}
	}
}
void xuatmang2(int a[MAX][MAX], int m, int n){
	int i,j;
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			printf("%4d",a[i][j]);
		}
		printf("\n");
	}
}

int checkNT(int n){
	int i;
	if(n<=1) return 0;
	for(i=2;i<=sqrt(n);i++){
		if(n%i==0) return 0;
	}
	return 1;
}

int CheckPalin(int n){  
    int r,daonguoc=0,tam;  
    tam=n; 
    while(n>0){  
       r=n%10;  
       daonguoc=(daonguoc*10)+r;  
       n=n/10;  
    }  
    if(daonguoc==tam)  return 1;
    else return 0; 
    return n;
} 

int CheckFibo(int n){
	int i,a1=1, a2=1,a;
	for(i=1;;i++){
		a=a1+a2;
		a1=a2;
		a2=a;
		i++;
		if(a==n){
		   return 1; 
		   break;
		}
		if(a>n) {
		   return 0; 
		   break;
		}
	}
	return n;
}

int CheckArmstrong(int n){
	int dem;
	int x,y,k=0;
	x=n;
	y=n;
	while(y!=0){
		y=y/10;
		dem++;
	}
	int du;
	while(x>0){
		du=x%10;
		k=k+pow(du,dem);
		x=x/10;
	}
	if(k==n){
		return 1;
	}
	else return 0;
	return n;
}

void InterChange(int a[],int n){
	int i,j;
	for(i=0;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(a[j]<a[i]) {
				int temp=a[i];
				a[i]=a[j];
				a[j]=temp;
			}
		}
	}
}

void InsertionSort(int arr[],int n) {
	int i,pos,j;
	for (i=1;i<n;i++) {
		pos=arr[i];
		j=i-1;
		while(j>=0 && arr[j]>pos){
			arr[j+1]=arr[j];
			j=j-1;
		}
		arr[j+1]=pos;
	}
}

void Bubble(int a[],int n) {
	int i,j;
	for( i=0;i<n;i++) {
		for(j=i+1;j<n;j++) {
			if(a[j]<a[j-1]) {
				int temp=a[j];
				a[j]=a[j-1];
				a[j-1]=temp;
			}
		}
	}
}

void SelectionSort(int a[],int n){
	int i,j,temp,min;
	for (i=0;i<n;i++) {
		min=i;
		for(j=i+1;j<n;j++)
			if (a[min]>a[j])
			    min=j;
		temp=a[min];
		a[min]=a[i];
		a[i]=temp;
	}
}

bool ktraDX(int arr[], int n) {
	int i;
	for(i = 0; i <= n/2; i++) {
		if(arr[i] != arr[n - 1 - i]) {
			return false;
		}
	}
	return true;
}

void DaoNguoc(int a[],int n){
	int i;
	for(i=0;i<n/2;i++){
		int t=a[i];
		a[i]=a[n-i-1];
		a[n-i-1]=t;
	}
}
